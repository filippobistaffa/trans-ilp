#!/bin/bash
###############################################################################
# This script is run for each candidate to evaluate it after all
# candidate configurations have been run on a single instance.
#
# Check the examples in examples/
#
# PARAMETERS:
# $1 is the candidate number
# $2 is the instance id
# $3 is the seed
# $4 is the instance name
# $5 is the number of candidates alive in this iteration
#
# ONLY FOR ELITIST RACE: The rest ($* after `shift 5') are the ids of the 
# candidates alive in this iteration. This list can be used to calculate the 
# hypervolume using only active candidates.
#
# RETURN VALUE:
# This script should print one numerical value: the cost that must be minimized.
# Exit with 0 if no error, with 1 in case of error
###############################################################################
CANDIDATE="$1"
INSTANCEID="$2"
SEED="$3"
INSTANCE="$4"
TOTALCANDIDATES="$5"
shift 5 || echo "Not enough parameters to $0"
ALLIDS=$*

IRACE_LOG="irace/ilp/log"

STDOUT=${IRACE_LOG}/c${CANDIDATE}-${INSTANCEID}.stdout
STDERR=${IRACE_LOG}/c${CANDIDATE}-${INSTANCEID}.stderr

error() {
    echo "`TZ=UTC date`: error: $@"
    exit 1
}

RW=$(cat ${STDOUT} | tail -n 1)
echo $(python3 -c "print(-($RW))")

#rm -f "${STDOUT}" "${STDERR}"
exit 0
