/* Generated by Cython 0.29.21 */

#ifndef __PYX_HAVE__oracle
#define __PYX_HAVE__oracle

#include "Python.h"
struct Personality_profile;
struct Agent;
struct Competence;
struct Task_type;
struct Data;

/* "oracle.pyx":13
 * 
 * # data types
 * cdef public struct Personality_profile:             # <<<<<<<<<<<<<<
 *     double sn
 *     double tf
 */
struct Personality_profile {
  double sn;
  double tf;
  double ei;
  double pj;
};

/* "oracle.pyx":19
 *     double pj
 * 
 * cdef public struct Agent:             # <<<<<<<<<<<<<<
 *     int id
 *     int gender
 */
struct Agent {
  int id;
  int gender;
  struct Personality_profile profile;
  std::map<std::string,double>  competence_level;
};

/* "oracle.pyx":25
 *     cpp_map[cpp_string,double] competence_level
 * 
 * cdef public struct Competence:             # <<<<<<<<<<<<<<
 *     double level
 *     double importance
 */
struct Competence {
  double level;
  double importance;
};

/* "oracle.pyx":29
 *     double importance
 * 
 * cdef public struct Task_type:             # <<<<<<<<<<<<<<
 *     cpp_map[cpp_string,Competence] required_competences
 * 
 */
struct Task_type {
  std::map<std::string,struct Competence>  required_competences;
};

/* "oracle.pyx":32
 *     cpp_map[cpp_string,Competence] required_competences
 * 
 * cdef public struct Data:             # <<<<<<<<<<<<<<
 *     cpp_vector[Agent] agents
 *     cpp_vector[cpp_string] competences
 */
struct Data {
  std::vector<struct Agent>  agents;
  std::vector<std::string>  competences;
  struct Task_type task;
};

#ifndef __PYX_HAVE_API__oracle

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

#endif /* !__PYX_HAVE_API__oracle */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initoracle(void);
#else
PyMODINIT_FUNC PyInit_oracle(void);
#endif

#endif /* !__PYX_HAVE__oracle */
